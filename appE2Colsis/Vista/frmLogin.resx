<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANIAAABBCAYAAACka/qvAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQ4SURBVHhe7d07aBRRFMbxLS0tLXZ2LC0tLS2txNIypVil
        sNDOQivBmYliIYgIdgHBQrBKa5nCIp0QUCI+iEFNgrJnPGdyYh579jUTk3X3f+BXBGbnTuB+ex87u9Oi
        KGoCK83K00lWzqnbppPLskly+dzJyxI4Ljt97m//u1f1yVyupQ/LM95dJ6vswuwCO5ksJZlsq+/RPwac
        PPlptL+uaD+d1zf+s96NT67sIiw8uxcXXzgwmfbe9GVZ+/JF79bHVz4CPWbkwfSQdRsU0oXynHfzf1sa
        nlva6Jck6/6OLwj4f+kAsaH9+0n6tDzlXf5oy06sDbzUIGlD8UUA0yDJu5s6Or21jTPv/kdTdkI7sY5C
        rIMwM3R0eq99/7zHoFnZieyEUUPA9JO15IFc9jjUq2pToZDVuAFgNuhU70vtkalaE+l0LjoxMGtsQKn1
        Qa4Oaa/bWfdXdFJgJtkGxDi7efqCuzqcfQtPBsyoamAp5IXHZHBV6yK2uIE+ZF3XS8Pvgkhzea5BYkoH
        9KH5eOdxiWtnq7tkSgcM9q2dlVc8Nr2la6Ol4EUADklyWQs3HnQ0OqtDFjehAiNICllvF3LJ47NXGqJ5
        tR29CECvNJdFj89edapvEsYvANDL7hT3+OyUbXlrkLghFRiDTe/SQi54jHRaZ18TJ0jAWHQp9Lt9X+54
        jKog3YsOBDDYgXWS/REdBGAYWfYYsdEA1CcfPEZVkD7EBwEYTDY9RlWQNuODAAzjMbIgxQcAGM5jRJCA
        JjxGBAlowmNEkIAmPEYECWjCY0SQgCY8RgQJaMJjRJCAJjxGBAlowmNEkIAmPEYECWjCY1R9H4mHhgE1
        eYyqIPHEcaAmj5FN7fg+ElCHDUIeIw1SIa+igwAMpkFa8RhVI9Kj6CAAQ2Sy5DGyNVJ5kw0HoIZCnnmM
        Wq10oTynQeJRLsB4en9Mn507YDyama2eH9LXdVKW5F2md8DI5I3HZ6/sp1ftJ1jjFwDYz57ckmTlnMfn
        YGnC+FkuYAQapI2+Tzm3hZMexBP7gAHaWXcrWZAFj01cmrR30YsB7JKv4dP69hdrJaC/JJcfnUJueFwG
        lybutQ5fPNkcOERnbKtDR6PdSrPytCaPKR6wj87UPtrNCx6T0cofzvwpOiEwe+Rr8kAuezzGKw3TxU7e
        5Y4HzDTb6la3PBb1qp3LdUtj1AAw7SxEnUxyj0OzsiHN5odRQ8D00ulc05HocPkd4u/jBoHpYgNH7TXR
        sLLdPE3psgaKr1xgKtnnRDoKrY69O1endN10VRtcs0ajiwH+N9VtP7ms24etI39OdBRljVmj1rgm+Ht0
        ccCk0767bRsKdu+czbi8ex9/VR/eZuWcfXddQ7WlF8dNr5ho9sZvAaqWKZnM972L+6TKRim7gzzNZdEu
        ckf8zwDHSd/kV6r+WMgre+M/0dGHoqioWq0/lXBJAY9CpwEAAAAASUVORK5CYII=
</value>
  </data>
</root>